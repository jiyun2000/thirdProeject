import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:thirdproject/Dio/EmpDio/employeesDio.dart';

class MyPage extends StatefulWidget{
  const MyPage({super.key});

  @override
  State<StatefulWidget> createState() => _MyPageState();
}



class _MyPageState extends State<MyPage> {

Future<int> getEmpNo() async {
  var prefs = await SharedPreferences.getInstance();
  return prefs.getInt('empNo') ?? 0;
}

Future<int> getDeptNo() async {
  var prefs = await SharedPreferences.getInstance();
  return prefs.getInt('deptNo') ?? 0;
}

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("üôã‚Äç‚ôÄÔ∏èMy Page"),
      ),
      body: Column(
      children:[ 

          FutureBuilder<int>(
            future: getEmpNo(), 
            builder: (context, empNoSnapshot) {
                if (empNoSnapshot.connectionState == ConnectionState.waiting) {
                  return Center(child: CircularProgressIndicator());
                }else if(empNoSnapshot.hasError){
                  return Center(child: Text('Error:${empNoSnapshot.error}'));
                }else if(empNoSnapshot.hasData){
                  int empNo = empNoSnapshot.data!;
                    return FutureBuilder(future: Employeesdio().findByEmpNo(empNo), 
                      builder: (context, snapshot) {
                        if(snapshot.connectionState == ConnectionState.waiting){
                          return Center(child: CircularProgressIndicator());
                        }else if(snapshot.hasError){
                          return Center(child: Text('ÏóêÎü¨ : ${snapshot.error}'));
                        }else if(snapshot.hasData){
                          JsonParser jsonParser = snapshot.data!;
                          return Expanded(
                            child: ListView(
                              children: [
                                Text(
                                  'ÏÇ¨ÏõêÎ≤àÌò∏ : ${jsonParser.empNo}',
                                  style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'Ïù¥Î¶Ñ : ${jsonParser.firstName} ${jsonParser.lastName}',
                                  style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'Î©îÏùºÏ£ºÏÜå : ${jsonParser.mailAddress} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'Ï£ºÏÜå : ${jsonParser.address} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                              SizedBox(height: 16),
                                Text(
                                  'Ï†ÑÌôîÎ≤àÌò∏ : ${jsonParser.phoneNum.substring(0,3)}-${jsonParser.phoneNum.substring(3,7)}-${jsonParser.phoneNum.substring(7,11)} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'ÏÑ±Î≥Ñ : ${jsonParser.gender == 'm' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'Ï£ºÎØºÎì±Î°ùÎ≤àÌò∏ : ${jsonParser.citizenId.substring(0,6)}-${jsonParser.citizenId.substring(6)} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'ÏûÖÏÇ¨Ïùº : ${DateFormat("yyyy-MM-dd").format(jsonParser.hireDate)}',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'Ïó∞Î¥â : ${jsonParser.salary} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'ÏßÅÏ±ÖÎ≤àÌò∏ : ${jsonParser.jobNo}',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'ÏÉùÏùº :  ${DateFormat("yyyy-MM-dd").format(jsonParser.birthday)} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                                SizedBox(height: 16),
                                Text(
                                  'Î∂ÄÏÑúÎ≤àÌò∏ : ${jsonParser.deptNo} ',
                                  style: TextStyle(fontSize: 20),
                                ),
                              ],
                            ),
                          );
                        }else{
                          return Center(child: Text('Îç∞Ïù¥ÌÑ∞x'));
                        }
                      },
            );
            }else{
              return Center(child: Text('Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌïòÏòÄÏäµÎãàÎã§.'));
            }
            },)
      ]
      )
    );
  }
}